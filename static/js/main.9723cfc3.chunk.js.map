{"version":3,"sources":["components/Pagination/Pagination.module.css","components/Characters/Characters.module.css","components/Episode/Episode.module.css","assets/meeseeks.png","assets/spinner.gif","constants/index.ts","services/getByName.ts","services/getBySpecies.ts","services/getCharacters.ts","services/getEpisode.ts","components/Episode/index.tsx","components/CharacterCard/index.tsx","components/Pagination/index.tsx","components/Search/index.tsx","components/Characters/index.tsx","components/Home/index.tsx","serviceWorker.ts","index.tsx","components/CharacterCard/CharacterCard.module.css","components/Search/Search.module.css"],"names":["module","exports","API_URL","getByName","name","a","page","fetch","response","json","fetchOneCharacter","type","fetchCharacters","getEpisode","url","Episode","useState","setName","episodeNumber","setEpisodeNumber","fetching","setFetching","error","setError","useEffect","episodeURL","data","episode","fetchEpisodeData","className","styles","wrapper","CharacterCard","fetchBySpecies","recommended","setEpisodeURL","clearEpisode","useCallback","cx","src","image","alt","species","onClick","title","episode_wrapper","map","i","key","onPointerEnter","onPointerLeave","match","Pagination","pageCount","currentPage","goToPage","pagination","prev_next","pages","active","Search","handleCharacterSearch","resetData","value","currentValue","setCurrentValue","onSubmit","event","preventDefault","onReset","onChange","e","target","htmlFor","label","container","data-testid","id","aria-label","input","placeholder","buttons_wrapper","button","disabled","Characters","characters","setCharacters","setPageCount","setCurrentPage","currentName","setCurrentName","speciesSearch","setSpeciesSearch","recommendedCharacters","setRecommendendCharacters","recommendendSpecies","setRecommendendSpecies","handleResponse","results","info","fetchData","selected","getCharacters","window","scrollTo","top","behavior","fetchByCharacterName","firstCharacterSpecies","console","log","getBySpecies","resp","splice","fetchCharacter","changePage","pageNumber","spinner","meeseeks","length","searched","characters_wrapper","recommendedCharacter","character","App","basename","path","Boolean","location","hostname","ReactDOM","render","StrictMode","Home","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","message"],"mappings":"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","file":"static/js/main.9723cfc3.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"pagination\":\"Pagination_pagination__2plzt\",\"pages\":\"Pagination_pages__2TgFR\",\"prev_next\":\"Pagination_prev_next__16CWJ\",\"active\":\"Pagination_active__1R0gI\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"characters_wrapper\":\"Characters_characters_wrapper__1wku3\",\"spinner\":\"Characters_spinner__1yJwU\",\"searched\":\"Characters_searched__2pCTs\",\"error\":\"Characters_error__2Nn4H\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"Episode_wrapper__1eQKe\"};","module.exports = __webpack_public_path__ + \"static/media/meeseeks.935d16c1.png\";","module.exports = __webpack_public_path__ + \"static/media/spinner.df87091a.gif\";","export const API_URL = 'https://rickandmortyapi.com/api';\n","import { API_URL } from '../constants';\n\nexport default async function getByName(name: string, page = 1) {\n  const response = await fetch(\n    `${API_URL}/character/?page=${page}&name=${name}`\n  );\n  return response.json();\n}\n","import { API_URL } from '../constants';\n\nexport default async function fetchOneCharacter(type: string, page = 1) {\n  const response = await fetch(\n    `${API_URL}/character/?page=${page}&species=${type}`\n  );\n  return response.json();\n}\n","import { API_URL } from '../constants';\n\nexport default async function fetchCharacters(page = 1) {\n  const response = await fetch(`${API_URL}/character/?page=${page}`);\n  return response.json();\n}\n","export default async function getEpisode(url: string) {\n  const response = await fetch(url);\n  return response.json();\n}\n","import React, { useEffect, useState } from 'react';\n\nimport getEpisode from '../../services/getEpisode';\nimport styles from './Episode.module.css';\n\nexport default function Episode({ url }: { url: string }) {\n  const [name, setName] = useState('');\n  const [episodeNumber, setEpisodeNumber] = useState('');\n  const [fetching, setFetching] = useState(true);\n  const [error, setError] = useState(null);\n\n  useEffect(() => {\n    const fetchEpisodeData = async (episodeURL: string) => {\n      const data = await getEpisode(episodeURL);\n      if (data.error) {\n        setError(data.error);\n      } else {\n        setName(data.name);\n        setEpisodeNumber(data.episode);\n      }\n    };\n\n    fetchEpisodeData(url);\n    setFetching(false);\n  }, [url]);\n\n  if (error) {\n    return <div className={styles.wrapper}>{error}</div>;\n  }\n\n  if (fetching || name === '' || episodeNumber === '') {\n    return <div className={styles.wrapper}>Loading...</div>;\n  }\n\n  return (\n    <div className={styles.wrapper}>\n      <p>\n        {name}, {episodeNumber}\n      </p>\n    </div>\n  );\n}\n","import cx from 'classnames';\nimport React, { useCallback, useState } from 'react';\n\nimport Episode from '../Episode';\nimport CharacterInt from './Character.types';\nimport styles from './CharacterCard.module.css';\n\ninterface Props {\n  data: CharacterInt;\n  fetchBySpecies: (type: string) => void;\n  recommended?: boolean;\n}\n\nexport default function CharacterCard({\n  data,\n  fetchBySpecies,\n  recommended = false,\n}: Props) {\n  const [episodeURL, setEpisodeURL] = useState('');\n\n  function showEpisode(url: string) {\n    setEpisodeURL(url);\n  }\n\n  const clearEpisode = useCallback(() => {\n    setEpisodeURL('');\n  }, []);\n\n  return (\n    <div className={cx(styles.wrapper, { [styles.recommended]: recommended })}>\n      <img src={data.image} alt={data.name} className={styles.image} />\n      <p className={styles.name}>{data.name}</p>\n      <div>\n        <div\n          className={styles.species}\n          onClick={() => fetchBySpecies(data.species)}\n        >\n          <p className={styles.title}>Species:</p>\n          <p>&nbsp;{data.species}</p>\n        </div>\n        <p className={styles.title}>Episodes:</p>\n        <div className={styles.episode_wrapper}>\n          {data.episode.map((episode, i) => (\n            <p\n              key={i}\n              onPointerEnter={() => showEpisode(episode)}\n              onPointerLeave={clearEpisode}\n              className={styles.episode}\n            >\n              {episode.match(/\\d*/gm)}\n            </p>\n          ))}\n          {episodeURL && <Episode url={episodeURL} />}\n        </div>\n      </div>\n    </div>\n  );\n}\n","import cx from 'classnames';\nimport React from 'react';\n\nimport styles from './Pagination.module.css';\n\ninterface Pagination {\n  pageCount: number;\n  currentPage: number;\n  goToPage: (pageNumber: number) => void;\n}\n\nexport default function Pagination({\n  pageCount,\n  currentPage,\n  goToPage,\n}: Pagination) {\n  return (\n    <div className={styles.pagination}>\n      {currentPage > 1 && (\n        <>\n          <button\n            onClick={() => goToPage(currentPage - 1)}\n            className={styles.prev_next}\n          >\n            Previous\n          </button>\n          <button\n            onClick={() => goToPage(currentPage - 1)}\n            className={styles.pages}\n          >\n            {currentPage - 1}\n          </button>\n        </>\n      )}\n      <p className={cx(styles.pages, styles.active)}>{currentPage}</p>\n      {currentPage < pageCount && (\n        <>\n          <button\n            onClick={() => goToPage(currentPage + 1)}\n            className={styles.pages}\n          >\n            {currentPage + 1}\n          </button>\n          <button\n            onClick={() => goToPage(currentPage + 1)}\n            className={styles.prev_next}\n          >\n            Next\n          </button>\n        </>\n      )}\n    </div>\n  );\n}\n","import React, { useCallback, useEffect, useState } from 'react';\n\nimport styles from './Search.module.css';\n\ninterface Props {\n  handleCharacterSearch: (search: string) => void;\n  resetData: () => void;\n  value: string;\n}\n\nexport default function Search({\n  handleCharacterSearch,\n  resetData,\n  value,\n}: Props) {\n  const [currentValue, setCurrentValue] = useState('');\n\n  useEffect(() => {\n    setCurrentValue(value);\n  }, [value]);\n\n  const onSubmit = (event: React.FormEvent) => {\n    event.preventDefault();\n    handleCharacterSearch(currentValue);\n  };\n\n  const onReset = (event: React.FormEvent) => {\n    event.preventDefault();\n    resetData();\n  };\n\n  const onChange = useCallback((e) => {\n    setCurrentValue(e.target.value);\n  }, []);\n\n  return (\n    <>\n      <form className={styles.wrapper} onSubmit={onSubmit} onReset={onReset}>\n        <label htmlFor=\"character\" className={styles.label}>\n          Search a character\n        </label>\n        <p className={styles.species}>\n          Or click on a character's species to find same ones\n        </p>\n        <div className={styles.container}>\n          <input\n            data-testid=\"input\"\n            type=\"text\"\n            id=\"character\"\n            aria-label=\"character\"\n            onChange={onChange}\n            value={currentValue}\n            className={styles.input}\n            placeholder=\"Eg: Beebo \"\n          />\n          <div className={styles.buttons_wrapper}>\n            <button type=\"reset\" onClick={onSubmit} className={styles.button} disabled={currentValue === ''}>\n              Search\n            </button>\n            <button type=\"reset\" onClick={onReset} className={styles.button}>\n              Reset search or filter\n            </button>\n          </div>\n        </div>\n      </form>\n    </>\n  );\n}\n","import React, { useCallback, useEffect, useState } from 'react';\n\nimport meeseeks from '../../assets/meeseeks.png';\nimport spinner from '../../assets/spinner.gif';\nimport getByName from '../../services/getByName';\nimport getBySpecies from '../../services/getBySpecies';\nimport getCharacters from '../../services/getCharacters';\nimport CharacterCard from '../CharacterCard';\nimport Pagination from '../Pagination';\nimport Search from '../Search';\nimport styles from './Characters.module.css';\n\nexport default function Characters() {\n  const [characters, setCharacters] = useState([]);\n  const [pageCount, setPageCount] = useState(1);\n  const [currentPage, setCurrentPage] = useState(1);\n  const [fetching, setFetching] = useState(true);\n  const [currentName, setCurrentName] = useState('');\n  const [speciesSearch, setSpeciesSearch] = useState('');\n  const [recommendedCharacters, setRecommendendCharacters] = useState([]);\n  const [recommendendSpecies, setRecommendendSpecies] = useState('');\n  const [error, setError] = useState(null);\n\n  function handleResponse(response: {\n    error: React.SetStateAction<null>;\n    results: React.SetStateAction<never[]>;\n    info: { pages: React.SetStateAction<number> };\n  }) {\n    if (response.error) {\n      setError(response.error);\n      setCharacters([]);\n    } else {\n      setCharacters(response.results);\n      setPageCount(response.info.pages);\n    }\n    setFetching(false);\n    setSpeciesSearch('');\n  }\n\n  // fetch data at first render or when resetting the search or filters\n  const fetchData = useCallback(async (selected = 1) => {\n    setFetching(true);\n    setCurrentName('');\n    setError(null);\n    setCurrentPage(selected);\n    setRecommendendSpecies('');\n    setRecommendendCharacters([]);\n\n    const data = await getCharacters(selected);\n    handleResponse(data);\n    window.scrollTo({ top: 0, behavior: 'smooth' });\n  }, []);\n\n  // fetch by character name\n  const fetchByCharacterName = useCallback(\n    (name: string, page?: number) => {\n      if (currentName === name && page === currentPage) return;\n\n      setCurrentPage(1);\n      setFetching(true);\n      setCurrentName(name);\n      setError(null);\n\n      const fetchCharacter = async () => {\n        const data = await getByName(name, page);\n        handleResponse(data);\n\n        // fetch the recommendations based on the species\n        // only if it's the first time\n        // or the species is the same as the recommended species\n        // or it's a new research with a different species\n        if (!data.error) {\n          const firstCharacterSpecies = data.results[0].species;\n          console.log(firstCharacterSpecies, recommendendSpecies);\n          if (\n            recommendendSpecies === '' ||\n            firstCharacterSpecies === recommendendSpecies ||\n            name !== currentName\n          ) {\n            setRecommendendSpecies(firstCharacterSpecies);\n            const resp = await getBySpecies(firstCharacterSpecies);\n            if (resp.error) {\n              setError(resp.error);\n            } else {\n              setRecommendendCharacters(resp.results.splice(0, 3));\n            }\n          }\n        }\n      };\n\n      fetchCharacter();\n    },\n    [currentPage, currentName, recommendendSpecies]\n  );\n\n  // fetch by characters by species\n  const fetchBySpecies = (type: string, page?: number) => {\n    if (speciesSearch === type && page === currentPage) return;\n    setFetching(true);\n\n    const fetchCharacter = async () => {\n      const data = await getBySpecies(type, page);\n      handleResponse(data);\n      setSpeciesSearch(type);\n    };\n\n    fetchCharacter();\n    setRecommendendSpecies('');\n    setRecommendendCharacters([]);\n  };\n\n  function changePage(pageNumber: number) {\n    if (currentName) {\n      fetchByCharacterName(currentName, pageNumber);\n    } else if (speciesSearch) {\n      fetchBySpecies(speciesSearch, pageNumber);\n    } else {\n      fetchData(pageNumber);\n    }\n    setCurrentPage(pageNumber);\n  }\n\n  // LIFE CYCLE\n\n  useEffect(() => {\n    fetchData();\n  }, [fetchData]);\n\n  // RENDERS\n\n  function handleFetch() {\n    return (\n      <div className={styles.spinner}>\n        <img src={spinner} alt=\"loading\" />\n      </div>\n    );\n  }\n\n  function handleSearch() {\n    if (error) {\n      return (\n        <div className={styles.error}>\n          <img src={meeseeks} alt=\"mr meeseeks\" />\n          Ooops: {error}\n        </div>\n      );\n    } else {\n      return (\n        <>\n          {speciesSearch.length > 0 && (\n            <p className={styles.searched}>Searched By: {speciesSearch}</p>\n          )}\n          <div className={styles.characters_wrapper}>\n            {recommendedCharacters.map((recommendedCharacter, i) => (\n              <CharacterCard\n                key={i}\n                data={recommendedCharacter}\n                fetchBySpecies={fetchBySpecies}\n                recommended\n              />\n            ))}\n            {characters.map((character, i) => (\n              <CharacterCard\n                key={i}\n                data={character}\n                fetchBySpecies={fetchBySpecies}\n              />\n            ))}\n          </div>\n          <Pagination\n            currentPage={currentPage}\n            pageCount={pageCount}\n            goToPage={changePage}\n          />\n        </>\n      );\n    }\n  }\n\n  return (\n    <div>\n      <Search\n        value={currentName}\n        handleCharacterSearch={fetchByCharacterName}\n        resetData={fetchData}\n      />\n      {fetching ? handleFetch() : handleSearch()}\n    </div>\n  );\n}\n","import React from 'react';\nimport { BrowserRouter as Router, Route, Switch } from 'react-router-dom';\n\nimport Characters from '../Characters';\n\nfunction App() {\n  return (\n    <Router basename=\"/\">\n      <div>\n        <Switch>\n          <Route path=\"/\">\n            <Characters />\n          </Route>\n        </Switch>\n      </div>\n    </Router>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      process.env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import './index.css';\n\nimport React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport Home from './components/Home';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Home />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"CharacterCard_wrapper__3L4Rl\",\"recommended\":\"CharacterCard_recommended__2OM21\",\"image\":\"CharacterCard_image__1mK5-\",\"name\":\"CharacterCard_name__1SykW\",\"species\":\"CharacterCard_species__1_it3\",\"title\":\"CharacterCard_title__vXM6N\",\"episode_wrapper\":\"CharacterCard_episode_wrapper__1uMnD\",\"episode\":\"CharacterCard_episode__SCtNq\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"Search_wrapper__1ATBJ\",\"container\":\"Search_container__1ATIJ\",\"buttons_wrapper\":\"Search_buttons_wrapper__36dHd\",\"label\":\"Search_label__22ZlC\",\"input\":\"Search_input__yx45c\",\"button\":\"Search_button__dnbUm\",\"species\":\"Search_species__MniRv\"};"],"sourceRoot":""}